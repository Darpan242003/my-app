text.split(" ") - Splits the string into an array using spaces as delimiters

Example: "hello world" becomes ["hello", "world"]
Example: "hello  world" becomes ["hello", "", "world"] (note the empty string from double space)


.filter(word => word.trim() !== "") - Filters out any empty or whitespace-only elements

word.trim() removes leading/trailing whitespace from each word
!== "" keeps only elements that aren't empty strings after trimming
This handles cases with multiple spaces, tabs, or other whitespace


.length - Returns the count of remaining elements in the filtered array


>> React Router
to install run: npm install react-router-dom
reference: https://v5.reactrouter.com/web/guides/quick-start

>> How to use React Router
1. import from the reference link above
    import {
        BrowserRouter as Router,
        Routes,
        Route,
    } from "react-router-dom";
2. insert "Routes" in the div (component) ==> "Switch" in older Versions.
3. Enclose your components (About and TextForm in our website) inside "Route Tag" and provide two attributes: path and element
4. put everything inside the "Router"
5. in Navbar replace "a" with "Link" and "href" with "to"

Example:
<Router>
        {/* <Navbar /> */} {/*Here we haven't passed any props so it will render the defaultProps. */}
        <Navbar title="TextUtils" aboutText="About Us" mode={mode} toggleMode={toggleMode} backgroundBlue={backgroundBlue} backgroundYellow={backgroundYellow} backgroundGreen={backgroundGreen} backgroundRed={backgroundRed} navbarBg={navbarBg} /> {/*pass the mode state and toggleMode function as prop with the variables of same name*/}
        {/* here variables title and aboutText are passed as props to Navbar component.  */}

        <Alert alert={alert} />

        <div className="container my-3"> {/* container is bootstrap class to keep the component in the middle and add equal margin at all sides 
      my-3: bootstrap class to add margin across y-axis*/}
          {/* Add Heading as a prop in the textform */}
          <Routes>
            <Route path='/about' element={<About mode={mode}/>}></Route>
            <Route path='/' element={<TextForm heading="Enter your text to analyze below" mode={mode} showAlert={showAlert} />}></Route>
            
            {/* pass the showAlert method in Textform*/}
          </Routes>
        </div>
      </Router>

note: always use "exact path.." inside a Route tag, ==> not needed because in newer versions paths are exact by default.
it will render the exact page when clicked on it.


>>Deploy your website on Github:

1. visit this site: https://create-react-app.dev/docs/deployment/#github-pages
2. add homepage to package.json at the top
3. replace the myusername and my-app with your username and your app name respectively in homepage.
4. install gh-pages: npm install --save gh-pages
5. add 
    "predeploy": "npm run build",
    "deploy": "gh-pages -d build",
    to "scripts" in package.json
6. Deploy the site by running "npm run deploy"

NOTE: after step 6 an error occured because gh-pages is looking for build folder but in vite a dist folder is generated.
for this change the line: "deploy": "gh-pages -d build", to "deploy": "gh-pages -d dist",

AND in vite.config.js:

ADD this line base: '/my-app/',

so the file becomes:
import {
  defineConfig
} from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
  base: '/my-app/',
})

cls: cumulative layout shift => To remove it, placed the "alert" component in saperate div and increased margin to 60px.